@page "/category/product/{ProductId}"
@inject Data.Services.CatalogService CatalogService

<h2>@Model.Name</h2>

<p>@Model.Description</p>

<div class="field">
    <form>
        <table class="table">
            <thead>
            <th>Variant</th>
            <th>Price</th>
            <th>Quantity</th>
            </thead>
            <tbody>
                <tr>
                    <td>
                        <div class="field">
                            <div class="control">
                                <div class="select is-small">
                                    <select value="@ProductVariantId" @onchange="UpdateProductVariant" required>
                                        @foreach (var productVariant in Model.ProductVariants)
                                        {
                                            <option value="@productVariant.Id">@productVariant.Name</option>
                                        }
                                    </select>
                                </div>
                            </div>
                        </div>
                    </td>
                    <td>@string.Format("{0:C}", Price)</td>
                    <td>
                        <div class="field has-addons">
                            <div class="control">
                                <input type="number" min="1" class="input is-small" @bind="Quantity" required />
                            </div>
                            <div class="control">
                                <button type="submit" class="button is-link">Add to Cart</button>
                            </div>
                        </div>
                    </td>
                </tr>
            </tbody>
        </table>
    </form>
</div>

@code {
    [Parameter]
    public string ProductId { get; set; }

    public int ProductVariantId { get; set; }

    public int Quantity { get; set; }

    public decimal Price { get; set; }

    public Data.Models.Product Model { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Model = await CatalogService.GetProductWithVariants(int.Parse(ProductId));
    }

    private void UpdateProductVariant(ChangeEventArgs eventArgs) 
    {
        ProductVariantId = int.Parse(eventArgs.Value.ToString());
        var variant = Model.ProductVariants.First(x => x.Id == ProductVariantId);
        Price = variant.Price;
    }
}